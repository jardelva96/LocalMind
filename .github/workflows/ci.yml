name: ci
on:
  push:
    branches: [ main ]
    tags: ['v*']   # dispara tamb√©m em tags (p/ push de imagem)
  pull_request:
  workflow_dispatch:

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    env:
      IAZERO_API_KEY: ${{ secrets.IAZERO_API_KEY || 'secreta' }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: 'pip'

      - name: Install test deps
        run: |
          python -m pip install -q -e . pytest requests

      - name: Build image
        run: docker build -t iazero:serve .

      - name: Run container
        run: |
          docker run -d -p 8000:8000 \
            -e IAZERO_API_KEY=${IAZERO_API_KEY} \
            -v "${{ github.workspace }}/models/export:/app/models/export" \
            --name iazero-serve iazero:serve
          # espera /healthz ficar OK
          for i in {1..60}; do
            curl -sf http://localhost:8000/healthz && break
            sleep 1
          done

      - name: Run tests (API leves)
        run: python -m pytest -q tests/test_api.py tests/test_predict_csv_cli.py

  push-image:
    needs: test-and-build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Login GHCR
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Build & push
        run: |
          REPO_LC=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          IMAGE="ghcr.io/${REPO_LC}/iazero-serve:${GITHUB_REF_NAME}"
          docker build -t "$IMAGE" .
          docker push "$IMAGE"
